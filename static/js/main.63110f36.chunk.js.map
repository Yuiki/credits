{"version":3,"sources":["Level.ts","Course.ts","C.ts","P.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Level","isCourse","obj","isMinMax","P1","c","children","Object","classCallCheck","this","Map","createClass","key","value","level","includesExcess","creditsCount","toConsumableArray","values","reduce","previous","child","max","Math","min","regenerator_default","a","mark","titles","wrap","_context","prev","next","delegateYield","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","title","add","err","return","Set","stop","get","_this","l1","p","none","acquired","creditsCounts","registered","map","l2","P2","selected","_context2","abrupt","P3","course","_","_context3","ConstraintCreater","code","Error","concat","json","subtitle","getCourse","create","candidates","App","props","_this2","possibleConstructorReturn","getPrototypeOf","call","coursesMap","courses1","c1","state","titlesOfRegisteredCourse","_this3","react_default","createElement","className","href","App_P1Editor","open","isDisabled","onClick","setState","Component","P1Editor","_this4","_this5","_loop","push","P3Editor","P2Editor","P1LevelIndicator","candidate","data-is-selected","window","confirm","has","data-value","data-is-disabled","P3LevelIndicator","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6yoCAAKA,4HCOQC,EAAW,SAACC,GAAD,MAA0C,UAAWA,GAAO,SAAUA,GAAO,iBAAkBA,GCW1GC,EAAW,SAACD,GAAD,MAAwD,kBAARA,aFlBnEF,4FAKUA,QGKFI,EAAb,WAEI,SAAAA,EAA6BC,EAAOC,GAA4CC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAK,KAAAJ,IAAAI,KADvEH,cACsE,EAC3EG,KAAKH,SAAW,IAAII,IAAIJ,GAHhC,OAAAC,OAAAI,EAAA,EAAAJ,CAAAH,EAAA,EAAAQ,IAAA,eAAAC,MAAA,SAkCiBC,EAAcC,GACvB,IAAMC,EAAeT,OAAAU,EAAA,EAAAV,CAAIE,KAAKH,SAASY,UAAUC,OAC7C,SAACC,EAAUC,GAAX,OAA6BD,EAAWC,EAAML,aAAaF,EAAOC,IAAiB,GACjFO,EAAcnB,EAASM,KAAKJ,EAAEW,cAAgBP,KAAKJ,EAAEW,aAAaM,IAAMb,KAAKJ,EAAEW,aACrF,OAAOD,EAAiBC,EAAeO,KAAKC,IAAIF,EAAKN,KAtC7D,CAAAJ,IAAA,SAAAC,MAAAY,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OA0CQ,OAAAF,EAAAG,cAAO1B,OAAAU,EAAA,EAAAV,CAAIE,KAAKH,SAASY,UAAUC,OAAoB,SAACC,EAAUC,GAAU,IAAAa,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACxE,QAAAC,EAAAC,EAAoBlB,EAAMO,SAA1BY,OAAAC,cAAAP,GAAAI,EAAAC,EAAAP,QAAAU,MAAAR,GAAA,EAAoC,KAAzBS,EAAyBL,EAAAzB,MAChCO,EAASwB,IAAID,IAFuD,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAIxE,OAAOhB,GACR,IAAI2B,KALP,QA1CR,wBAAAjB,EAAAkB,SAAApB,EAAAnB,SAAA,CAAAG,IAAA,QAAAqC,IAAA,WAMuB,IAAAC,EAAAzC,KACT0C,EAAK5C,OAAAU,EAAA,EAAAV,CAAIE,KAAKJ,EAAEC,UAAUa,OAAc,SAACC,EAAUC,GACrD,GAAIpB,EAASoB,GACT,OAAOD,EAEP,IAAMgC,EAAIF,EAAK5C,SAAS2C,IAAI5B,GAC5B,YAAUgB,IAANe,EACOpD,EAAMqD,KAEN9B,KAAKC,IAAIJ,EAAUgC,EAAEtC,QAGrCd,EAAMsD,UAEHC,EAAgB,CAACvD,EAAMqD,KAAMrD,EAAMwD,WAAYxD,EAAMsD,UAAUG,IAAI,SAAA3C,GAAK,OAC1EoC,EAAKlC,aAAaF,GAAO,KAEvBU,EAAcrB,EAASM,KAAKJ,EAAEW,cAAgBP,KAAKJ,EAAEW,aAAaQ,IAAMf,KAAKJ,EAAEW,aAC/E0C,EACFH,EAAcvD,EAAMsD,WAAa9B,EAC7BxB,EAAMsD,SACNC,EAAcvD,EAAMwD,aAAehC,EAC/BxB,EAAMwD,WACNxD,EAAMqD,KAElB,OAAO9B,KAAKC,IAAI2B,EAAIO,OA/B5BtD,EAAA,GAmDauD,EAAb,WACI,SAAAA,EACaC,EACAvC,GAAmBd,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,GAAAlD,KAAAmD,WAAAnD,KAAAY,QAHpC,OAAAd,OAAAI,EAAA,EAAAJ,CAAAoD,EAAA,EAAA/C,IAAA,eAAAC,MAAA,SASiBC,EAAcC,GACvB,OAAsB,OAAfN,KAAKY,MAAiB,EAAIZ,KAAKY,MAAML,aAAaF,EAAOC,KAVxE,CAAAH,IAAA,SAAAC,MAAAY,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAc2B,OAAfvB,KAAKY,MAdjB,CAAAwC,EAAA7B,KAAA,eAAA6B,EAAAC,OAAA,iBAiBY,OAAAD,EAAA5B,cAAOxB,KAAKY,MAAMO,SAAlB,QAjBZ,wBAAAiC,EAAAb,SAAApB,EAAAnB,SAAA,CAAAG,IAAA,QAAAqC,IAAA,WAMQ,OAAsB,OAAfxC,KAAKY,MAAiBrB,EAAMqD,KAAO5C,KAAKY,MAAMP,UAN7D6C,EAAA,GAsBaI,EAAb,WACI,SAAAA,EAA6BC,EAAgClD,GAAeP,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,GAAAtD,KAAAuD,SAAAvD,KAAAK,QADhF,OAAAP,OAAAI,EAAA,EAAAJ,CAAAwD,EAAA,EAAAnD,IAAA,eAAAC,MAAA,SAGiBC,EAAcmD,GACvB,OAAOnD,GAASL,KAAKK,MAAQL,KAAKuD,OAAOhD,aAAehB,EAAMqD,OAJtE,CAAAzC,IAAA,SAAAC,MAAAY,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,UAQYvB,KAAKK,QAAUd,EAAMqD,KARjC,CAAAa,EAAAlC,KAAA,eAAAkC,EAAAJ,OAAA,iBAWY,OAXZI,EAAAlC,KAAA,EAWkBvB,KAAKuD,OAAOrB,MAX9B,wBAAAuB,EAAAlB,SAAApB,EAAAnB,WAAAsD,EAAA,GCnEMI,aACF,SAAAA,EAAqBV,GAAmClD,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GAAA1D,KAAAgD,4DAE9CW,GACN,IAAMJ,EAASvD,KAAKgD,IAAIR,IAAImB,GAE5B,QAAe/B,IAAX2B,EACA,MAAM,IAAIK,MAAJ,6BAAAC,OAAmBF,EAAnB,6DAGV,OAAOJ,iCAGJO,GAA0B,IAAArB,EAAAzC,KAC7B,MAAO,CACHkC,MAAO4B,EAAK5B,MACZ6B,SAAUD,EAAKC,SACfxD,aAAcuD,EAAKvD,aACnBV,SAAUiE,EAAKjE,SAASmD,IAAI,SAACpC,GACzB,MAAqB,kBAAVA,EACA6B,EAAKuB,UAAUpD,GACf,aAAcA,EACd6B,EAAKwB,OAAOrD,GAEZ,CACHsD,WAAYtD,EAAMsD,WAAWlB,IAAI,SAAA5C,GAC7B,OAAOqC,EAAKwB,OAAO7D,kBAc1B+D,cACjB,SAAAA,EAAYC,GAAY,IAAAC,EAAAvE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,GACpBE,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAE,KAAAF,OAAAyE,EAAA,EAAAzE,CAAAqE,GAAAK,KAAAxE,KAAMoE,IACN,IAAMK,EAAa,IAAIxE,IAAIyE,EAAS1B,IAAI,SAAA5C,GAAK,MAAI,CAACA,EAAMuD,KAAMvD,MAExDR,EAAI,IAAI8D,EAAkBe,GAAYR,OAAOU,GAJ/B,OAKpBN,EAAKO,MAAQ,CACThF,IACA+C,EAAG,IAAIhD,EAAGC,EAAG,IAAIK,KACjB4E,yBAA0B,IAAIvC,KARd+B,wEAYf,IAAAS,EAAA9E,KACL,OACI+E,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,OACXF,EAAA9D,EAAA+D,cAAA,0EACAD,EAAA9D,EAAA+D,cAAA,oNACAD,EAAA9D,EAAA+D,cAAA,oIACwBD,EAAA9D,EAAA+D,cAAA,kNADxB,yDAEID,EAAA9D,EAAA+D,cAAA,8YAEJD,EAAA9D,EAAA+D,cAAA,sDACWD,EAAA9D,EAAA+D,cAAA,KAAGE,KAAK,6BAAR,WADX,2BAEQH,EAAA9D,EAAA+D,cAAA,KAAGE,KAAK,sCAAR,UAFR,gEAIAH,EAAA9D,EAAA+D,cAACG,EAAD,CAAUvF,EAAGI,KAAK4E,MAAMhF,EAAG+C,EAAG3C,KAAK4E,MAAMjC,EAAGyC,MAAI,EAACC,YAAY,EACzDR,yBAA0B7E,KAAK4E,MAAMC,yBACrCS,QAAS,SAAA3C,GACLmC,EAAKS,SAAS,CAAE5C,IAAGkC,yBAA0B,IAAIvC,IAAIK,EAAExB,uBA7B9CqE,aA4C3BC,cACF,SAAAA,EAAYrB,GAAsB,IAAAsB,EAAA,OAAA5F,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IAC9BC,EAAA5F,OAAAwE,EAAA,EAAAxE,CAAAE,KAAAF,OAAAyE,EAAA,EAAAzE,CAAA2F,GAAAjB,KAAAxE,KAAMoE,KACDQ,MAAQ,CAAEQ,OAAQhB,EAAMgB,MAFCM,wEAKd,IAAAC,EAAA3F,KACVkE,EAA0B,GADhBzC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGhB,IAHgB,IAGhBC,EAHgB+D,EAAA,eFlGHnG,EEqGFmB,EAHKiB,EAAAzB,MAIZ,GFtG8C,UAArCX,EEsGAmB,IFtGuD,iBAAkBnB,GAAO,aAAcA,EEsGtF,CACb,IAAMkD,EAAIgD,EAAKvB,MAAMzB,EAAE9C,SAAS2C,IAAI5B,GAEpC,QAAUgB,IAANe,KAAqBA,aAAahD,GAClC,MAAM,IAAIiE,MAGdM,EAAW2B,KAAKd,EAAA9D,EAAA+D,cAACS,EAAD,CAAU7F,EAAGgB,EAAOyE,WAAYM,EAAKvB,MAAMiB,WACvD1C,EAAGA,GAAK,IAAIhD,EAAGiB,EAAO,IAAIX,KAC1B4E,yBAA0Bc,EAAKvB,MAAMS,yBACrCS,QACI,SAAA3C,GAAC,OAAIgD,EAAKvB,MAAMkB,QAAQ,IAAI3F,EAAGgG,EAAKvB,MAAMxE,EAAlB,GAAAiE,OAAA/D,OAAAU,EAAA,EAAAV,CAAyB6F,EAAKvB,MAAMzB,EAAE9C,UAAtC,CAAgD,CAACe,EAAO+B,gBAErF,GAAInD,EAASoB,GAAQ,CACxB,IAAM+B,EAAIgD,EAAKvB,MAAMzB,EAAE9C,SAAS2C,IAAI5B,GAEpC,QAAUgB,IAANe,KAAqBA,aAAaW,GAClC,MAAM,IAAIM,MAGdM,EAAW2B,KAAKd,EAAA9D,EAAA+D,cAACc,EAAD,CAAUvC,OAAQ3C,EAC9B+B,EAAGA,GAAK,IAAIW,EAAG1C,EAAOrB,EAAMqD,MAC5ByC,WAAYM,EAAKvB,MAAMiB,WACvBR,yBAA0Bc,EAAKvB,MAAMS,yBACrCS,QACI,SAAA3C,GAAC,OAAIgD,EAAKvB,MAAMkB,QAAQ,IAAI3F,EAAGgG,EAAKvB,MAAMxE,EAAlB,GAAAiE,OAAA/D,OAAAU,EAAA,EAAAV,CAAyB6F,EAAKvB,MAAMzB,EAAE9C,UAAtC,CAAgD,CAACe,EAAO+B,eAErF,CACH,IAAMA,EAAIgD,EAAKvB,MAAMzB,EAAE9C,SAAS2C,IAAI5B,GAEpC,QAAUgB,IAANe,KAAqBA,aAAaO,GAClC,MAAM,IAAIU,MAGdM,EAAW2B,KAAKd,EAAA9D,EAAA+D,cAACe,EAAD,CAAUnG,EAAGgB,EACzB+B,EAAGA,GAAK,IAAIO,EAAG,KAAM,MACrB2B,yBAA0Bc,EAAKvB,MAAMS,yBACrCS,QACI,SAAA3C,GAAC,OAAIgD,EAAKvB,MAAMkB,QAAQ,IAAI3F,EAAGgG,EAAKvB,MAAMxE,EAAlB,GAAAiE,OAAA/D,OAAAU,EAAA,EAAAV,CAAyB6F,EAAKvB,MAAMzB,EAAE9C,UAAtC,CAAgD,CAACe,EAAO+B,aAvChGb,EAAoB9B,KAAKoE,MAAMxE,EAAEC,SAAjCkC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAP,QAAAU,MAAAR,GAAA,EAA2CmE,IAH3B,MAAAxD,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GA+ChB,OACIoD,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,WACXF,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,iBAAiBK,QAAS,kBAAMK,EAAKJ,SAAS,CAAEH,MAAOO,EAAKf,MAAMQ,SAC7EL,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,yBACVjF,KAAK4E,MAAMQ,KAAO,SAAM,gBAE7BL,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,sCACXF,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,oBACXF,EAAA9D,EAAA+D,cAAA,UAAKhF,KAAKoE,MAAMxE,EAAEsC,YACSN,IAA1B5B,KAAKoE,MAAMxE,EAAEmE,SAA0BgB,EAAA9D,EAAA+D,cAAA,UAAKhF,KAAKoE,MAAMxE,EAAEmE,UAAkB,IAEhFgB,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,4BACXF,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,0BACXF,EAAA9D,EAAA+D,cAAA,cAAShF,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMsD,UAAU,IAC/C7C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMsD,UAAU,GAAQ7C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMsD,UAAU,GAA5F,KAAAgB,OAEI7D,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMsD,UAAU,GAAQ7C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMsD,UAAU,GAFhG,KAGU,GALlB,gBASAkC,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,4BACXF,EAAA9D,EAAA+D,cAAA,cAAShF,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMwD,YAAY,IACjD/C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMwD,YAAY,GAAQ/C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMwD,YAAY,GAAhG,KAAAc,OAEI7D,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMwD,YAAY,GAAQ/C,KAAKoE,MAAMzB,EAAEpC,aAAahB,EAAMwD,YAAY,GAFpG,KAGU,GALlB,gBASAgC,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,0BACXF,EAAA9D,EAAA+D,cAAA,cACItF,EAASM,KAAKoE,MAAMxE,EAAEW,cAAtB,GAAAsD,OACO7D,KAAKoE,MAAMxE,EAAEW,aAAaQ,IADjC,KAAA8C,OACwC7D,KAAKoE,MAAMxE,EAAEW,aAAaM,KAC9Db,KAAKoE,MAAMxE,EAAEW,cAJzB,kBAURwE,EAAA9D,EAAA+D,cAACgB,EAAD,CAAkB3F,MAAOL,KAAKoE,MAAMzB,EAAEtC,MAAOgF,WAAYrF,KAAKoE,MAAMiB,cAEvErF,KAAK4E,MAAMQ,KAAQL,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,gBAAgBf,GAAqB,WA/FjEsB,aAqGvB,SAASO,EAAS3B,GAMd,OACIW,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,YACXF,EAAA9D,EAAA+D,cAAA,WACAD,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,iBACVnF,OAAAU,EAAA,EAAAV,CAAIsE,EAAMxE,EAAEsE,YAAYlB,IAAI,SAAAiD,GAAS,OAClClB,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,SAASiB,mBAAkB9B,EAAMzB,EAAEQ,WAAa8C,GAC3DlB,EAAA9D,EAAA+D,cAAA,OAAKM,QAAS,YACY,OAAlBlB,EAAMzB,EAAE/B,OAAuC,OAArBwD,EAAMzB,EAAEQ,UACqB,IAAvDiB,EAAMzB,EAAE/B,MAAML,aAAahB,EAAMwD,YAAY,IAC7CoD,OAAOC,QACH,SAAAvC,OAAIoC,EAAU/D,MAAd,gEAAA2B,OAAgCO,EAAMzB,EAAEQ,SAASjB,MAAjD,uIAAA2B,OACMO,EAAMzB,EAAE/B,MAAML,aAAahB,EAAMwD,YAAY,GADnD,uCAAAc,OAEMO,EAAMzB,EAAE/B,MAAML,aAAahB,EAAMsD,UAAU,GAFjD,kBAGA,0CACJuB,EAAMkB,QAAQ,IAAIpC,EAAG+C,EAAW,IAAItG,EAAGsG,EAAW,IAAIhG,QAE3DgF,UAAU,yBACbF,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,mBACXF,EAAA9D,EAAA+D,cAACG,EAAD,CAAUvF,EAAGqG,EACTX,QAAS,SAAA3C,GAAC,OAAIyB,EAAMkB,QAAQ,IAAIpC,EAAG+C,EAAWtD,KAC9C0C,gBAAwBzD,IAAZwC,EAAMzB,GAAmByB,EAAMzB,EAAEQ,WAAa8C,EAC1DpB,yBAA0BT,EAAMS,yBAChClC,EAAGyB,EAAMzB,EAAEQ,WAAa8C,GAA+B,OAAlB7B,EAAMzB,EAAE/B,MACzCwD,EAAMzB,EAAE/B,MACR,IAAIjB,EAAGsG,EAAW,IAAIhG,aAS1D,SAAS6F,EAAS1B,GAOd,IAAMiB,EAAajB,EAAMiB,YACrBjB,EAAMzB,EAAEtC,QAAUd,EAAMqD,MAAQwB,EAAMS,yBAAyBwB,IAAIjC,EAAMb,OAAOrB,OACpF,OACI6C,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,SAASK,QAAS,WACzBlB,EAAMzB,EAAEtC,OAASd,EAAMsD,SACvBuB,EAAMkB,QAAQ,IAAIhC,EAAGc,EAAMb,OAAQhE,EAAMqD,OAClCwB,EAAMzB,EAAEtC,OAASd,EAAMwD,WAC9BqB,EAAMkB,QAAQ,IAAIhC,EAAGc,EAAMb,OAAQhE,EAAMsD,WAEzCuB,EAAMkB,QAAQ,IAAIhC,EAAGc,EAAMb,OAAQhE,EAAMwD,cAG7CuD,aAAYlC,EAAMzB,EAAEtC,MACpBkG,mBAAkBlB,GAClBN,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,eACXF,EAAA9D,EAAA+D,cAAA,QAAMC,UAAU,eAAcF,EAAA9D,EAAA+D,cAAA,YAAOZ,EAAMb,OAAOI,OAClDoB,EAAA9D,EAAA+D,cAAA,MAAIC,UAAU,gBAAgBb,EAAMb,OAAOrB,OAC3C6C,EAAA9D,EAAA+D,cAAA,QAAMC,UAAU,wBAAuBF,EAAA9D,EAAA+D,cAAA,cAASZ,EAAMb,OAAOhD,cAA7D,iBAEJwE,EAAA9D,EAAA+D,cAACwB,EAAD,CACInG,MAAO+D,EAAMzB,EAAEtC,MACfgF,WAAYA,KAK5B,SAASW,EAAiB5B,GACtB,OACIW,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,qBACXqB,aAAYlC,EAAM/D,MAClBkG,mBAAkBnC,EAAMiB,YACpBjB,EAAMiB,WAAa,eACfjB,EAAM/D,QAAUd,EAAMwD,WAClB,iBACAqB,EAAM/D,QAAUd,EAAMsD,SAClB,iBAAS,gBAKrC,SAAS2D,EAAiBpC,GACtB,OACIW,EAAA9D,EAAA+D,cAAA,OAAKC,UAAU,qBACXqB,aAAYlC,EAAM/D,MAClBkG,mBAAkBnC,EAAMiB,YACpBjB,EAAMiB,WAAa,2BACfjB,EAAM/D,QAAUd,EAAMwD,WAClB,2BACAqB,EAAM/D,QAAUd,EAAMsD,SAClB,2BAAS,kCC5RjB4D,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAA9D,EAAA+D,cAAC+B,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.63110f36.chunk.js","sourcesContent":["enum Level {\n    none = 0,\n    registered = 1,\n    acquired = 2\n}\nexport default Level;","import { C1, C2 } from \"./C\";\n\nexport default interface Course {\n    title: string;\n    code: string;\n    creditsCount: number;\n}\nexport const isCourse = (obj: Course | C1 | C2): obj is Course => 'title' in obj && 'code' in obj && 'creditsCount' in obj;\n","import Course from \"./Course\";\n\nexport interface C1 {\n    title: string;\n    subtitle?: string;\n    creditsCount: number | MinMax;\n    children: Iterable<Course | C1 | C2>;\n}\nexport const isC1 = (obj: Course | C1 | C2): obj is C1 => 'title' in obj && 'creditsCount' in obj && 'children' in obj;\n\nexport interface C2 {\n    candidates: Iterable<C1>;\n}\n\nexport interface MinMax {\n    min: number,\n    max: number\n}\nexport const isMinMax = (obj: number | MinMax): obj is MinMax => typeof obj !== 'number';","import Course, { isCourse } from \"./Course\";\nimport { C1, C2, isMinMax } from \"./C\";\nimport Level from \"./Level\";\n\nexport interface P {\n    level: Level;\n    creditsCount(level: Level, includesExcess: boolean): number;\n    titles(): IterableIterator<string>\n}\n\nexport class P1 implements P {\n    readonly children: ReadonlyMap<Course | C1 | C2, P>;\n    constructor(private readonly c: C1, children: Iterable<[Course | C1 | C2, P]>) {\n        this.children = new Map(children);\n    }\n\n    get level(): Level {\n        const l1 = [...this.c.children].reduce<Level>((previous, child): Level => {\n            if (isCourse(child)) {\n                return previous;\n            } else {\n                const p = this.children.get(child);\n                if (p === undefined) {\n                    return Level.none;\n                } else {\n                    return Math.min(previous, p.level);\n                }\n            }\n        }, Level.acquired);\n\n        const creditsCounts = [Level.none, Level.registered, Level.acquired].map(level =>\n            this.creditsCount(level, false));\n\n        const min: number = isMinMax(this.c.creditsCount) ? this.c.creditsCount.min : this.c.creditsCount;\n        const l2 =\n            creditsCounts[Level.acquired] >= min ?\n                Level.acquired :\n                creditsCounts[Level.registered] >= min ?\n                    Level.registered :\n                    Level.none;\n\n        return Math.min(l1, l2);\n    }\n\n    creditsCount(level: Level, includesExcess: boolean): number {\n        const creditsCount = [...this.children.values()].reduce(\n            (previous, child): number => previous + child.creditsCount(level, includesExcess), 0);\n        const max: number = isMinMax(this.c.creditsCount) ? this.c.creditsCount.max : this.c.creditsCount;\n        return includesExcess ? creditsCount : Math.min(max, creditsCount);\n    }\n\n    *titles(): IterableIterator<string> {\n        yield* [...this.children.values()].reduce<Set<string>>((previous, child) => {\n            for (const title of child.titles()) {\n                previous.add(title);\n            }\n            return previous;\n        }, new Set())\n    }\n}\n\nexport class P2 implements P {\n    constructor(\n        readonly selected: C1 | null,\n        readonly child: P1 | null) { }\n\n    get level(): Level {\n        return this.child === null ? Level.none : this.child.level;\n    }\n\n    creditsCount(level: Level, includesExcess: boolean): number {\n        return this.child === null ? 0 : this.child.creditsCount(level, includesExcess);\n    }\n\n    *titles(): IterableIterator<string> {\n        if (this.child === null) {\n            return;\n        } else {\n            yield* this.child.titles();\n        }\n    }\n}\n\nexport class P3 implements P {\n    constructor(private readonly course: Course, public readonly level: Level) { }\n\n    creditsCount(level: Level, _: boolean): number {\n        return level <= this.level ? this.course.creditsCount : Level.none;\n    }\n\n    *titles(): IterableIterator<string> {\n        if (this.level === Level.none) {\n            return;\n        } else {\n            yield this.course.title;\n        }\n    }\n}\n","import React, { Component, ReactNode } from 'react';\nimport './App.css';\nimport courses1 from './courses1.json';\nimport c1 from './coins17.json';\nimport { P1, P3, P2 } from './P';\nimport Course, { isCourse } from './Course';\nimport { C2, C1, isC1, MinMax, isMinMax } from './C';\nimport Level from './Level';\n\ninterface ConstraintJSON {\n    children: (string | ConstraintJSON | { candidates: ConstraintJSON[] })[];\n    title: string;\n    subtitle?: string;\n    creditsCount: number | MinMax;\n}\n\nclass ConstraintCreater {\n    constructor(readonly map: ReadonlyMap<string, Course>) { }\n\n    getCourse(code: string): Course {\n        const course = this.map.get(code);\n\n        if (course === undefined) {\n            throw new Error(`科目番号 '${code}' が見つかりません。`);\n        }\n\n        return course;\n    }\n\n    create(json: ConstraintJSON): C1 {\n        return {\n            title: json.title,\n            subtitle: json.subtitle,\n            creditsCount: json.creditsCount,\n            children: json.children.map((child): Course | C1 | C2 => {\n                if (typeof child === 'string') {\n                    return this.getCourse(child);\n                } else if ('children' in child) {\n                    return this.create(child);\n                } else {\n                    return {\n                        candidates: child.candidates.map(value => {\n                            return this.create(value);\n                        })\n                    }\n                }\n            })\n        }\n    }\n}\n\ninterface AppState {\n    c: C1,\n    p: P1,\n    titlesOfRegisteredCourse: ReadonlySet<string>\n}\nexport default class App extends Component<any, AppState> {\n    constructor(props: any) {\n        super(props);\n        const coursesMap = new Map(courses1.map(value => [value.code, value as Course]));\n\n        const c = new ConstraintCreater(coursesMap).create(c1);\n        this.state = {\n            c,\n            p: new P1(c, new Map()),\n            titlesOfRegisteredCourse: new Set()\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>卒業要件を満たしたい</h1>\n                <p>某大学の卒業要件を満たすための履修計画を支援するためのツールです。 </p>\n                <p>\n                    このツールで得られた結果を利用する場合，<strong>必ずご自身の履修要覧やシラバス，または支援室などで確認されるよう</strong>お願いいたします。\n                    <i>（各科目の単位数や卒業要件の定義が誤っている可能性があります。また，禁止されている科目の組み合わせが存在する可能性があります。）</i>\n                </p>\n                <p>\n                    お問い合わせは<a href=\"https://twitter.com/_n017\">Twitter</a>\n                    もしくは<a href=\"https://github.com/hiroto7/credits\">GitHub</a>へお願いいたします。\n                </p>\n                <P1Editor c={this.state.c} p={this.state.p} open isDisabled={false}\n                    titlesOfRegisteredCourse={this.state.titlesOfRegisteredCourse}\n                    onClick={p => {\n                        this.setState({ p, titlesOfRegisteredCourse: new Set(p.titles()) });\n                    }} />\n            </div>\n        );\n    }\n}\n\ninterface P1EditorProps {\n    c: C1,\n    p: P1,\n    open?: boolean,\n    isDisabled: boolean,\n    onClick: (p: P1) => void,\n    titlesOfRegisteredCourse: ReadonlySet<string>\n}\nclass P1Editor extends Component<P1EditorProps, { open: boolean }> {\n    constructor(props: P1EditorProps) {\n        super(props);\n        this.state = { open: !!props.open };\n    }\n\n    render(): ReactNode {\n        const candidates: ReactNode[] = [];\n\n        for (const child of this.props.c.children) {\n            if (isC1(child)) {\n                const p = this.props.p.children.get(child);\n\n                if (p !== undefined && !(p instanceof P1)) {\n                    throw new Error();\n                }\n\n                candidates.push(<P1Editor c={child} isDisabled={this.props.isDisabled}\n                    p={p || new P1(child, new Map())}\n                    titlesOfRegisteredCourse={this.props.titlesOfRegisteredCourse}\n                    onClick={\n                        p => this.props.onClick(new P1(this.props.c, [...this.props.p.children, [child, p]]))\n                    } />);\n            } else if (isCourse(child)) {\n                const p = this.props.p.children.get(child);\n\n                if (p !== undefined && !(p instanceof P3)) {\n                    throw new Error();\n                }\n\n                candidates.push(<P3Editor course={child}\n                    p={p || new P3(child, Level.none)}\n                    isDisabled={this.props.isDisabled}\n                    titlesOfRegisteredCourse={this.props.titlesOfRegisteredCourse}\n                    onClick={\n                        p => this.props.onClick(new P1(this.props.c, [...this.props.p.children, [child, p]]))\n                    } />)\n            } else {\n                const p = this.props.p.children.get(child);\n\n                if (p !== undefined && !(p instanceof P2)) {\n                    throw new Error();\n                }\n\n                candidates.push(<P2Editor c={child}\n                    p={p || new P2(null, null)}\n                    titlesOfRegisteredCourse={this.props.titlesOfRegisteredCourse}\n                    onClick={\n                        p => this.props.onClick(new P1(this.props.c, [...this.props.p.children, [child, p]]))\n                    } />);\n            }\n        }\n\n        return (\n            <div className=\"planner\">\n                <div className=\"planner-header\" onClick={() => this.setState({ open: !this.state.open })}>\n                    <div className=\"planner-expand-button\">\n                        {this.state.open ? '▼' : '▶︎'}\n                    </div>\n                    <div className=\"constraint-title-and-credits-count\">\n                        <div className=\"constraint-title\">\n                            <h1>{this.props.c.title}</h1>\n                            {this.props.c.subtitle !== undefined ? (<h2>{this.props.c.subtitle}</h2>) : \"\"}\n                        </div>\n                        <div className=\"constraint-credits-count\">\n                            <div className=\"acquired-credits-count\">\n                                <strong>{this.props.p.creditsCount(Level.acquired, false)}</strong>{\n                                    this.props.p.creditsCount(Level.acquired, true) > this.props.p.creditsCount(Level.acquired, false) ?\n                                        `(+${\n                                        this.props.p.creditsCount(Level.acquired, true) - this.props.p.creditsCount(Level.acquired, false)\n                                        })` : ''\n                                }\n                                修得\n                            </div>\n                            <div className=\"registered-credits-count\">\n                                <strong>{this.props.p.creditsCount(Level.registered, false)}</strong>{\n                                    this.props.p.creditsCount(Level.registered, true) > this.props.p.creditsCount(Level.registered, false) ?\n                                        `(+${\n                                        this.props.p.creditsCount(Level.registered, true) - this.props.p.creditsCount(Level.registered, false)\n                                        })` : ''\n                                }\n                                履修\n                            </div>\n                            <div className=\"required-credits-count\">\n                                <strong>{\n                                    isMinMax(this.props.c.creditsCount) ?\n                                        `${this.props.c.creditsCount.min}-${this.props.c.creditsCount.max}` :\n                                        this.props.c.creditsCount\n                                }</strong>\n                                必要\n                            </div>\n                        </div>\n                    </div>\n                    <P1LevelIndicator level={this.props.p.level} isDisabled={this.props.isDisabled} />\n                </div>\n                {this.state.open ? (<div className=\"planner-body\">{candidates}</div>) : ''}\n            </div>\n        );\n    }\n}\n\nfunction P2Editor(props: {\n    c: C2,\n    onClick: (p: P2) => void,\n    p: P2,\n    titlesOfRegisteredCourse: ReadonlySet<string>\n}) {\n    return (\n        <div className=\"selector\">\n            <h1></h1>\n            <div className=\"selector-body\">\n                {[...props.c.candidates].map(candidate => (\n                    <div className=\"option\" data-is-selected={props.p.selected === candidate}>\n                        <div onClick={() => {\n                            if (props.p.child === null || props.p.selected === null ||\n                                props.p.child.creditsCount(Level.registered, true) === 0 ||\n                                window.confirm(\n                                    `「${candidate.title}」に切り替えると，「${props.p.selected.title}」に設定された次の情報は失われます。\\n` +\n                                    `・履修${props.p.child.creditsCount(Level.registered, true)}単位\\n` +\n                                    `・修得${props.p.child.creditsCount(Level.acquired, true)}単位\\n` +\n                                    '続けますか？')) {\n                                props.onClick(new P2(candidate, new P1(candidate, new Map())))\n                            }\n                        }} className=\"option-select-button\"></div>\n                        <div className=\"option-contents\">\n                            <P1Editor c={candidate}\n                                onClick={p => props.onClick(new P2(candidate, p))}\n                                isDisabled={props.p === undefined || props.p.selected !== candidate}\n                                titlesOfRegisteredCourse={props.titlesOfRegisteredCourse}\n                                p={props.p.selected === candidate && props.p.child !== null ?\n                                    props.p.child :\n                                    new P1(candidate, new Map())} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction P3Editor(props: {\n    course: Course,\n    p: P3,\n    isDisabled: boolean,\n    onClick: (value: P3) => void,\n    titlesOfRegisteredCourse: ReadonlySet<string>\n}) {\n    const isDisabled = props.isDisabled ||\n        props.p.level === Level.none && props.titlesOfRegisteredCourse.has(props.course.title);\n    return (\n        <div className=\"course\" onClick={() => {\n            if (props.p.level == Level.acquired) {\n                props.onClick(new P3(props.course, Level.none));\n            } else if (props.p.level == Level.registered) {\n                props.onClick(new P3(props.course, Level.acquired));\n            } else {\n                props.onClick(new P3(props.course, Level.registered));\n            }\n        }}\n            data-value={props.p.level}\n            data-is-disabled={isDisabled}>\n            <div className=\"course-info\">\n                <span className=\"course-code\"><code>{props.course.code}</code></span>\n                <h1 className=\"course-title\">{props.course.title}</h1>\n                <span className=\"course-credits-count\"><strong>{props.course.creditsCount}</strong>単位</span>\n            </div>\n            <P3LevelIndicator\n                level={props.p.level}\n                isDisabled={isDisabled} />\n        </div>\n    );\n}\n\nfunction P1LevelIndicator(props: { level: Level, isDisabled: boolean }) {\n    return (\n        <div className=\"p1-level-indicator\"\n            data-value={props.level}\n            data-is-disabled={props.isDisabled}>{\n                props.isDisabled ? '不要' :\n                    props.level === Level.registered ?\n                        '履修OK' :\n                        props.level === Level.acquired ?\n                            '修得OK' : '不足'\n            }</div>\n    );\n}\n\nfunction P3LevelIndicator(props: { level: Level, isDisabled: boolean }) {\n    return (\n        <div className=\"p3-level-indicator\"\n            data-value={props.level}\n            data-is-disabled={props.isDisabled}>{\n                props.isDisabled ? '選択不可' :\n                    props.level === Level.registered ?\n                        '履修する' :\n                        props.level === Level.acquired ?\n                            '修得済み' : '履修しない'\n            }</div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}